%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2404 648
%%HiResBoundingBox: 0 0 2403.1199 648
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2403.1199 648 re
W
q
[0.24 0 0 -0.24 0 648] cm
q
0 0 10012.5 2700 re
W*
q
[3.125084 0 0 3.126461 0 0.000910382] cm
/DeviceRGB {} CS
[0.251 0.3176 0.3059] SC
/DeviceRGB {} cs
[0.251 0.3176 0.3059] sc
0 0 3203.9141 864.59528 re
f
Q
q
[43.927952 0 0 43.947308 265.91058 111.920372] cm
/DeviceRGB {} CS
[0.8941 0.9765 0.9608] SC
/DeviceRGB {} cs
[0.8941 0.9765 0.9608] sc
5.2 40.959999 m
7.28 40.959999 l
7.28 44.599998 l
1.2 44.599998 l
1.2 28.279999 l
1.2 11.959999 l
7.12 11.959999 l
7.28 11.959999 l
7.28 15.599999 l
5.96 15.599999 l
5.119999 15.599999 l
4.839999 15.599999 4.839999 15.599999 4.839999 15.959999 c
4.839999 20.32 l
4.839999 23.52 l
4.799999 25.720001 l
5.039999 25.720001 l
6.439999 25.720001 l
6.679999 25.720001 l
7.279999 25.720001 l
7.279999 29.360001 l
6.759999 29.360001 l
6.679999 29.360001 l
4.839999 29.360001 l
4.839999 31.360001 l
4.839999 35.560001 l
4.839999 37.040001 l
4.839999 40.52 l
4.839999 40.880001 l
4.839999 40.920002 4.879999 40.960003 4.919999 40.960003 c
5.079999 40.960003 l
5.199999 40.960003 l
5.2 40.959999 l
h
21.485001 15.6 m
18.485001 15.6 l
18.485001 25.720001 l
18.525002 32.400002 l
18.525002 33.32 l
18.525002 35.560001 l
18.525002 37.040001 l
18.525002 38.360001 l
18.525002 44.599998 l
14.885001 44.599998 l
14.885001 28.279999 l
14.885001 15.599999 l
11.885001 15.599999 l
11.885001 11.959998 l
14.885001 11.959998 l
18.165001 11.959998 l
18.485001 11.959998 l
21.485001 11.959998 l
21.485001 15.599999 l
21.485001 15.6 l
h
35.73 33.32 m
35.73 35.560001 l
35.73 37.040001 l
35.73 38.360001 l
35.73 44.599998 l
32.09 44.599998 l
32.09 29.359999 l
31.65 29.359999 l
31.57 29.359999 l
29.73 29.359999 l
29.73 31.359999 l
29.73 33.32 l
29.73 35.560001 l
29.73 37.040001 l
29.73 38.360001 l
29.73 44.599998 l
26.09 44.599998 l
26.09 28.279999 l
26.09 11.959999 l
29.690001 11.959999 l
29.690001 25.719999 l
29.93 25.719999 l
31.33 25.719999 l
31.57 25.719999 l
32.09 25.719999 l
32.09 11.959999 l
35.689999 11.959999 l
35.689999 21.599998 l
35.689999 25.719997 l
35.689999 32.759998 l
35.73 32.759998 l
35.73 33.32 l
h
52.974998 44.360001 m
52.974998 44.48 l
52.974998 44.52 52.934998 44.560001 52.894997 44.599998 c
52.734997 44.599998 l
49.574997 44.599998 l
49.414997 44.599998 l
49.414997 44.559998 49.374996 44.559998 49.334995 44.519997 c
49.334995 44.439995 49.334995 44.399998 49.294994 44.319996 c
49.254993 43.759995 49.214993 43.199997 49.134995 42.639996 c
48.974995 40.919994 l
48.814995 39.199993 l
48.734993 38.319992 l
48.734993 38.23999 48.694992 38.199993 48.574993 38.199993 c
48.334991 38.199993 l
47.09499 38.159992 45.894993 38.159992 44.694992 38.199993 c
44.414993 38.199993 l
44.334991 38.199993 44.294994 38.239994 44.254993 38.319992 c
44.254993 38.559994 44.214993 38.759991 44.214993 38.959991 c
44.134991 39.639992 44.054993 40.319992 44.014992 40.999992 c
43.854992 42.719994 l
43.694992 44.199993 l
43.694992 44.279995 l
43.654991 44.599995 43.654991 44.599995 43.374992 44.599995 c
40.574993 44.599995 l
40.494991 44.599995 40.414993 44.599995 40.334991 44.559994 c
40.414993 43.999992 l
40.414993 43.879993 40.414993 43.759991 40.454994 43.639992 c
40.494995 43.119991 40.534996 42.55999 40.614994 42.039993 c
40.774994 40.439995 l
40.934994 38.799995 l
41.094994 37.239994 l
41.134995 36.959995 41.174995 36.679993 41.174995 36.439995 c
41.294994 35.559994 41.374996 34.719994 41.454994 33.839996 c
41.694996 31.559996 l
41.854996 29.959995 l
41.934998 29.439995 41.974995 28.919994 42.014996 28.359995 c
42.214996 26.759995 l
42.214996 26.479994 42.254997 26.239994 42.294998 25.959995 c
42.535 23.359995 l
42.775002 21.079994 l
42.935001 19.519995 l
43.015003 18.959995 43.055 18.439995 43.095001 17.919994 c
43.295002 16.279995 l
43.375004 15.439995 l
43.415005 14.839994 43.495003 14.239995 43.575005 13.639995 c
43.615005 13.079994 43.655006 12.559995 43.735004 12.039994 c
43.735004 11.959994 l
49.615005 11.959994 l
49.615005 12.239994 49.655006 12.479994 49.695007 12.719995 c
49.735008 13.239994 49.775009 13.719995 49.855007 14.239994 c
50.015007 15.999994 l
50.095009 16.559994 50.135006 17.079994 50.175007 17.599995 c
50.375008 19.239994 l
50.375008 19.519995 50.415009 19.759995 50.455009 20.039993 c
50.695011 22.639994 l
50.935013 24.879993 l
50.975014 25.439993 51.055012 25.999994 51.135014 26.519993 c
51.175014 27.079992 51.215015 27.599993 51.295013 28.159992 c
51.455013 29.759993 l
51.615013 31.359993 l
51.775013 32.999992 l
51.815014 33.239994 51.855015 33.519993 51.855015 33.759991 c
51.975014 34.639992 52.055016 35.479992 52.135014 36.359989 c
52.375015 38.639988 l
52.535015 40.239986 l
52.615017 40.759987 52.655014 41.279987 52.695015 41.839985 c
52.895016 43.439983 l
52.895016 43.759983 52.935017 44.079983 52.975018 44.359982 c
52.974998 44.360001 l
h
48.134998 34.560001 m
48.334999 34.560001 l
47.735001 28.080002 l
47.615002 27.200003 l
47.615002 26.840002 47.575001 26.480003 47.535 26.120003 c
47.494999 25.800003 47.454998 25.440002 47.454998 25.120003 c
47.254997 23.360003 l
47.214996 22.800003 47.174995 22.200003 47.094997 21.600002 c
47.094997 21.320002 47.054996 21.040003 47.014996 20.760002 c
46.974995 20.440002 46.934994 20.080002 46.934994 19.760002 c
46.854992 19.160002 46.814995 18.600002 46.774994 18.000002 c
46.574993 16.000002 l
46.574993 15.880002 46.534992 15.760002 46.494991 15.640002 c
46.494991 15.600002 46.494991 15.600002 46.45499 15.600002 c
46.45499 15.640002 l
46.294991 16.960003 l
46.25499 17.520002 46.214989 18.120003 46.134991 18.680002 c
46.09499 19.280003 46.054989 19.840002 45.974991 20.440002 c
45.814991 22.200003 l
45.734989 23.000002 l
45.574989 24.760002 l
45.494987 25.360003 45.45499 25.920002 45.414989 26.520002 c
45.334988 27.320002 l
45.254986 27.880001 45.214989 28.480001 45.174988 29.040001 c
44.974987 30.800001 l
44.934986 31.400002 44.894985 31.960001 44.814987 32.560001 c
44.814987 32.720001 44.774986 32.880001 44.774986 33.080002 c
44.614986 34.560001 l
47.414986 34.560001 l
48.134987 34.560001 l
48.134998 34.560001 l
h
68.699997 33.32 m
68.699997 35.560001 l
68.699997 37.040001 l
68.699997 38.360001 l
68.699997 44.599998 l
68.619995 44.599998 l
65.059998 44.599998 l
65.019997 44.599998 l
63.779995 39.16 62.539997 33.719997 61.339996 28.279999 c
61.219997 27.679998 l
61.219997 32.399998 l
61.219997 33.319996 l
61.219997 35.559998 l
61.219997 37.039997 l
61.219997 38.359997 l
61.219997 44.599998 l
57.579998 44.599998 l
57.579998 28.279999 l
57.579998 11.959999 l
57.66 11.959999 l
61.18 11.959999 l
61.260002 11.959999 l
64.340004 25.719999 l
65.060005 28.92 l
65.060005 28.280001 l
65.060005 11.960001 l
68.660004 11.960001 l
68.700005 25.720001 l
68.700005 32.400002 l
68.700005 33.32 l
68.699997 33.32 l
h
f
Q
q
[25.808552 0 0 25.819927 3660.9912 60.566158] cm
/DeviceRGB {} CS
[0.8941 0.9765 0.9608] SC
/DeviceRGB {} cs
[0.8941 0.9765 0.9608] sc
56.366699 16.336426 m
56.366699 12.842285 53.510742 10 50 10 c
46.489258 10 43.633301 12.842285 43.633301 16.336426 c
43.633301 19.830566 46.489258 22.67334 50 22.67334 c
53.510742 22.67334 56.366699 19.830566 56.366699 16.336426 c
h
45.633301 16.336426 m
45.633301 13.945313 47.592285 12 50 12 c
52.407715 12 54.366699 13.945313 54.366699 16.336426 c
54.366699 18.728027 52.407715 20.67334 50 20.67334 c
47.592285 20.67334 45.633301 18.728027 45.633301 16.336426 c
h
f
26.227051 19.844727 m
26.220703 19.844727 26.214844 19.844727 26.208496 19.844727 c
24.513184 19.849609 22.91748 20.51416 21.71582 21.71582 c
20.51416 22.91748 19.849609 24.513184 19.844727 26.208496 c
19.839844 27.90625 20.49707 29.500977 21.694824 30.698242 c
22.888184 31.891602 24.475098 32.547852 26.166016 32.547852 c
26.171875 32.547852 26.178223 32.547852 26.184082 32.547852 c
27.879395 32.543457 29.475098 31.878906 30.676758 30.676758 c
31.878906 29.475098 32.543457 27.879395 32.547852 26.184082 c
32.552734 24.486816 31.895996 22.89209 30.698242 21.694824 c
29.505371 20.501465 27.917969 19.844727 26.227051 19.844727 c
h
29.262695 29.262695 m
28.437012 30.088379 27.341797 30.544922 26.178711 30.547852 c
25.020996 30.562012 23.927246 30.102539 23.108887 29.28418 c
22.290527 28.46582 21.841309 27.375488 21.844727 26.214355 c
21.848145 25.050781 22.304688 23.955566 23.129883 23.129883 c
23.955566 22.304688 25.050781 21.848145 26.214355 21.844727 c
26.218262 21.844727 26.222656 21.844727 26.226563 21.844727 c
27.383301 21.844727 28.46875 22.293457 29.28418 23.108887 c
30.102539 23.927246 30.55127 25.017578 30.547852 26.178711 c
30.544922 27.341797 30.088379 28.437012 29.262695 29.262695 c
h
f
10 50 m
10 53.510742 12.842285 56.366699 16.336426 56.366699 c
19.830566 56.366699 22.67334 53.510742 22.67334 50 c
22.67334 46.489258 19.830566 43.633301 16.336426 43.633301 c
12.842285 43.633301 10 46.489258 10 50 c
h
20.67334 50 m
20.67334 52.407715 18.728027 54.366699 16.336426 54.366699 c
13.945313 54.366699 12 52.407715 12 50 c
12 47.592285 13.945313 45.633301 16.336426 45.633301 c
18.728027 45.633301 20.67334 47.592285 20.67334 50 c
h
f
26.208496 80.155273 m
26.214844 80.155273 26.220703 80.155273 26.227051 80.155273 c
27.917969 80.155273 29.505371 79.498535 30.698242 78.305176 c
31.895996 77.10791 32.552734 75.513184 32.547852 73.815918 c
32.543457 72.120605 31.878906 70.524902 30.676758 69.323242 c
29.475098 68.121094 27.879395 67.456543 26.184082 67.452148 c
24.529785 67.468262 22.89209 68.104492 21.694824 69.301758 c
20.49707 70.499023 19.839844 72.09375 19.844727 73.791504 c
19.849609 75.486816 20.51416 77.08252 21.71582 78.28418 c
22.91748 79.48584 24.513184 80.150391 26.208496 80.155273 c
h
23.108887 70.71582 m
23.924316 69.900391 25.009766 69.452148 26.166016 69.452148 c
26.17041 69.452148 26.174316 69.452148 26.178711 69.452148 c
27.341797 69.455078 28.437012 69.911621 29.262695 70.737305 c
30.088379 71.562988 30.544922 72.658203 30.547852 73.821289 c
30.55127 74.982422 30.102539 76.072754 29.28418 76.891113 c
28.46875 77.706543 27.383301 78.155273 26.226563 78.155273 c
26.222656 78.155273 26.218262 78.155273 26.214355 78.155273 c
25.050781 78.151855 23.955566 77.695313 23.129883 76.870117 c
22.304688 76.044434 21.848145 74.949219 21.844727 73.785645 c
21.841309 72.624512 22.290527 71.53418 23.108887 70.71582 c
h
f
43.633301 83.663574 m
43.633301 87.157715 46.489258 90 50 90 c
53.510742 90 56.366699 87.157715 56.366699 83.663574 c
56.366699 80.169434 53.510742 77.32666 50 77.32666 c
46.489258 77.32666 43.633301 80.169434 43.633301 83.663574 c
h
54.366699 83.663574 m
54.366699 86.054688 52.407715 88 50 88 c
47.592285 88 45.633301 86.054688 45.633301 83.663574 c
45.633301 81.271973 47.592285 79.32666 50 79.32666 c
52.407715 79.32666 54.366699 81.271973 54.366699 83.663574 c
h
f
69.323242 69.323242 m
68.121094 70.524902 67.456543 72.120605 67.452148 73.815918 c
67.447266 75.513184 68.104004 77.10791 69.301758 78.305176 c
70.494629 79.498535 72.082031 80.155273 73.772949 80.155273 c
73.779297 80.155273 73.785156 80.155273 73.791504 80.155273 c
75.486816 80.150391 77.08252 79.48584 78.28418 78.28418 c
79.48584 77.08252 80.150391 75.486816 80.155273 73.791504 c
80.160156 72.09375 79.50293 70.499023 78.305176 69.301758 c
77.10791 68.104492 75.550293 67.443359 73.815918 67.452148 c
72.120605 67.456543 70.524902 68.121094 69.323242 69.323242 c
h
73.833984 69.452148 m
74.990234 69.452148 76.075684 69.900391 76.891113 70.71582 c
77.709473 71.53418 78.158691 72.624512 78.155273 73.785645 c
78.151855 74.949219 77.695313 76.044434 76.870117 76.870117 c
76.044434 77.695313 74.949219 78.151855 73.785645 78.155273 c
73.781738 78.155273 73.777344 78.155273 73.773438 78.155273 c
72.616699 78.155273 71.53125 77.706543 70.71582 76.891113 c
69.897461 76.072754 69.44873 74.982422 69.452148 73.821289 c
69.455078 72.658203 69.911621 71.562988 70.737305 70.737305 c
71.562988 69.911621 72.658203 69.455078 73.821289 69.452148 c
73.825684 69.452148 73.82959 69.452148 73.833984 69.452148 c
h
f
83.663574 43.633301 m
80.169434 43.633301 77.32666 46.489258 77.32666 50 c
77.32666 53.510742 80.169434 56.366699 83.663574 56.366699 c
87.157715 56.366699 90 53.510742 90 50 c
90 46.489258 87.157715 43.633301 83.663574 43.633301 c
h
83.663574 54.366699 m
81.271973 54.366699 79.32666 52.407715 79.32666 50 c
79.32666 47.592285 81.271973 45.633301 83.663574 45.633301 c
86.054688 45.633301 88 47.592285 88 50 c
88 52.407715 86.054688 54.366699 83.663574 54.366699 c
h
f
73.791504 19.844727 m
73.785156 19.844727 73.779297 19.844727 73.772949 19.844727 c
72.082031 19.844727 70.494629 20.501465 69.301758 21.694824 c
68.104004 22.89209 67.447266 24.486816 67.452148 26.184082 c
67.456543 27.879395 68.121094 29.475098 69.323242 30.676758 c
70.524902 31.878906 72.120605 32.543457 73.815918 32.547852 c
73.821777 32.547852 73.828125 32.547852 73.833984 32.547852 c
75.524902 32.547852 77.112305 31.891602 78.305176 30.698242 c
79.50293 29.500977 80.160156 27.90625 80.155273 26.208496 c
80.150391 24.513184 79.48584 22.91748 78.28418 21.71582 c
77.08252 20.51416 75.486816 19.849609 73.791504 19.844727 c
h
76.891113 29.28418 m
76.075684 30.099609 74.990234 30.547852 73.833984 30.547852 c
73.82959 30.547852 73.825684 30.547852 73.821289 30.547852 c
72.658203 30.544922 71.562988 30.088379 70.737305 29.262695 c
69.911621 28.437012 69.455078 27.341797 69.452148 26.178711 c
69.44873 25.017578 69.897461 23.927246 70.71582 23.108887 c
71.53125 22.293457 72.616699 21.844727 73.773438 21.844727 c
73.777344 21.844727 73.781738 21.844727 73.785645 21.844727 c
74.949219 21.848145 76.044434 22.304688 76.870117 23.129883 c
77.695313 23.955566 78.151855 25.050781 78.155273 26.214355 c
78.158691 27.375488 77.709473 28.46582 76.891113 29.28418 c
h
f
65.888672 21.45459 m
66.042969 21.541016 66.209961 21.581543 66.375 21.581543 c
66.725586 21.581543 67.065918 21.396973 67.249023 21.068848 c
67.518555 20.586426 67.345703 19.977539 66.863281 19.708496 c
64.661133 18.479492 62.319824 17.491211 59.90332 16.771973 c
59.374512 16.615723 58.817383 16.916016 58.659668 17.445313 c
58.501953 17.974609 58.803711 18.53125 59.333008 18.688965 c
61.608398 19.366699 63.814453 20.296875 65.888672 21.45459 c
h
f
34.072754 21.344238 m
34.233398 21.344238 34.396484 21.305664 34.547852 21.223633 c
36.634277 20.094727 38.852051 19.192871 41.138672 18.543457 c
41.669922 18.392578 41.978516 17.839844 41.827637 17.308594 c
41.677246 16.776856 41.126465 16.470703 40.592773 16.619629 c
38.165039 17.308594 35.811035 18.266113 33.595703 19.464844 c
33.110352 19.727539 32.929688 20.334473 33.192383 20.820313 c
33.373047 21.154785 33.717285 21.344238 34.072754 21.344238 c
h
f
16.896973 39.97168 m
16.739258 40.500977 17.041016 41.057617 17.570313 41.215332 c
17.665527 41.243652 17.76123 41.257324 17.855957 41.257324 c
18.286621 41.257324 18.68457 40.976074 18.813965 40.541992 c
19.491699 38.266602 20.421875 36.060547 21.57959 33.986328 c
21.849121 33.503906 21.67627 32.89502 21.193848 32.625977 c
20.710449 32.355469 20.102539 32.528809 19.833496 33.011719 c
18.604492 35.213867 17.616211 37.555176 16.896973 39.97168 c
h
f
21.348633 65.327148 m
20.219727 63.240723 19.317871 61.022949 18.668457 58.736328 c
18.517578 58.20459 17.966309 57.896973 17.433594 58.047363 c
16.902344 58.198242 16.59375 58.750977 16.744629 59.282227 c
17.433594 61.709961 18.391113 64.063965 19.589844 66.279297 c
19.770508 66.61377 20.114746 66.803223 20.470215 66.803223 c
20.630859 66.803223 20.793945 66.764648 20.945313 66.682617 c
21.430664 66.419922 21.611328 65.812988 21.348633 65.327148 c
h
f
34.111328 78.29541 m
33.628906 78.024902 33.020508 78.198242 32.750977 78.681152 c
32.481445 79.163574 32.654297 79.772461 33.136719 80.041504 c
35.338867 81.270508 37.680176 82.258789 40.09668 82.978027 c
40.191895 83.006348 40.287598 83.02002 40.382324 83.02002 c
40.812988 83.02002 41.210938 82.73877 41.340332 82.304688 c
41.498047 81.775391 41.196289 81.21875 40.666992 81.061035 c
38.391602 80.383301 36.185547 79.453125 34.111328 78.29541 c
h
f
65.452148 78.526367 m
63.365723 79.655273 61.147949 80.557129 58.861328 81.206543 c
58.330078 81.357422 58.021484 81.910156 58.172363 82.441406 c
58.297363 82.881836 58.697754 83.168945 59.133789 83.168945 c
59.224121 83.168945 59.315918 83.15625 59.407227 83.130371 c
61.834961 82.441406 64.188965 81.483887 66.404297 80.285156 c
66.889648 80.022461 67.070313 79.415527 66.807617 78.929688 c
66.544922 78.443848 65.937988 78.262695 65.452148 78.526367 c
h
f
78.806152 67.124023 m
78.960449 67.210449 79.127441 67.250977 79.29248 67.250977 c
79.643066 67.250977 79.983398 67.066406 80.166504 66.738281 c
81.395508 64.536133 82.383789 62.194824 83.103027 59.77832 c
83.260742 59.249023 82.958984 58.692383 82.429688 58.534668 c
81.901367 58.375977 81.34375 58.678223 81.186035 59.208008 c
80.508301 61.483398 79.578125 63.689453 78.42041 65.763672 c
78.150879 66.246094 78.32373 66.85498 78.806152 67.124023 c
h
f
78.651367 34.422852 m
79.780273 36.509277 80.682129 38.727051 81.331543 41.013672 c
81.456543 41.454102 81.856934 41.741211 82.292969 41.741211 c
82.383301 41.741211 82.475098 41.728516 82.566406 41.702637 c
83.097656 41.551758 83.40625 40.999023 83.255371 40.467773 c
82.566406 38.040039 81.608887 35.686035 80.410156 33.470703 c
80.146973 32.984863 79.540527 32.802246 79.054688 33.067383 c
78.569336 33.330078 78.388672 33.937012 78.651367 34.422852 c
h
f
50 70 m
61.027832 70 70 61.027832 70 50 c
70 38.972168 61.027832 30 50 30 c
38.972168 30 30 38.972168 30 50 c
30 61.027832 38.972168 70 50 70 c
h
50 32 m
59.925293 32 68 40.074707 68 50 c
68 59.925293 59.925293 68 50 68 c
40.074707 68 32 59.925293 32 50 c
32 40.074707 40.074707 32 50 32 c
h
f
Q
q
[43.919979 0 0 43.939335 6182.6919 112.145912] cm
/DeviceRGB {} CS
[0.8941 0.9765 0.9608] SC
/DeviceRGB {} cs
[0.8941 0.9765 0.9608] sc
21.325001 20.68 m
21.325001 35.599998 l
21.325001 37.439999 l
21.325001 38.119999 21.285 38.84 21.245001 39.519997 c
21.205 39.919998 21.165001 40.319996 21.085001 40.679996 c
21.085001 40.719997 21.085001 40.759998 21.045 40.799995 c
21.045 40.959995 l
21.004999 40.999996 l
20.244999 44.839996 16.244999 44.599995 16.244999 44.599995 c
14.924999 44.599995 l
12.884999 44.599995 l
10.124999 44.599995 l
10.124999 28.279995 l
10.124999 22.839994 10.124999 17.399994 10.164999 11.959995 c
13.764999 11.959995 l
16.244999 11.959995 l
16.244999 11.959995 20.244999 11.719996 21.004999 15.559996 c
21.045 15.599996 21.045 15.599996 21.045 15.639996 c
21.045 15.759996 l
21.085001 15.799995 21.085001 15.839995 21.085001 15.879995 c
21.165001 16.279995 21.205002 16.639996 21.245001 17.039995 c
21.285002 17.719995 21.325001 18.439995 21.325001 19.119995 c
21.325001 20.679995 l
21.325001 20.68 l
h
17.684999 37.599998 m
17.684999 36.279999 l
17.684999 36.16 l
17.684999 36 l
17.684999 22.24 l
17.684999 22.039999 l
17.684999 18.959999 l
17.684999 18.439999 17.644999 17.919998 17.564999 17.359999 c
17.524998 17.159998 17.484999 16.959999 17.404999 16.759998 c
17.364998 16.599999 17.284998 16.479998 17.244999 16.359999 c
16.964998 15.919999 16.605 15.679998 16.124998 15.599999 c
15.884998 15.599999 l
14.764998 15.599999 l
13.764998 15.599999 l
13.764998 15.879998 l
13.764998 15.959998 l
13.764998 20.319998 l
13.764998 21.599998 l
13.764998 22.399998 l
13.764998 23.519999 l
13.724998 25.719999 l
13.764998 25.719999 l
13.764998 28.279999 l
13.764998 34.079998 l
13.764998 35.559998 l
13.764998 37.039997 l
13.764998 40.519997 l
13.764998 40.879997 l
13.764998 40.919998 13.804998 40.959999 13.844998 40.959999 c
14.004998 40.959999 l
15.884998 40.959999 l
16.124998 40.959999 l
16.604998 40.879997 16.964998 40.639999 17.244999 40.200001 c
17.404999 39.84 l
17.484999 39.639999 17.525 39.400002 17.564999 39.200001 c
17.644999 38.68 17.684999 38.119999 17.684999 37.600002 c
17.684999 37.599998 l
h
38.57 44.360001 m
38.57 44.48 l
38.57 44.52 38.529999 44.560001 38.489998 44.599998 c
38.329998 44.599998 l
35.169998 44.599998 l
35.009998 44.599998 l
35.009998 44.559998 34.969997 44.559998 34.929996 44.519997 c
34.929996 44.439995 34.929996 44.399998 34.889996 44.319996 c
34.849995 43.759995 34.809994 43.199997 34.729996 42.639996 c
34.569996 40.919994 l
34.409996 39.199993 l
34.329994 38.319992 l
34.329994 38.23999 34.289993 38.199993 34.169994 38.199993 c
33.929993 38.199993 l
32.689991 38.159992 31.489992 38.159992 30.289993 38.199993 c
30.009993 38.199993 l
29.929993 38.199993 29.889992 38.239994 29.849993 38.319992 c
29.849993 38.559994 29.809992 38.759991 29.809992 38.959991 c
29.729992 39.639992 29.649992 40.319992 29.609991 40.999992 c
29.449991 42.719994 l
29.289991 44.199993 l
29.289991 44.279995 l
29.24999 44.599995 29.24999 44.599995 28.969992 44.599995 c
26.169992 44.599995 l
26.089993 44.599995 26.009993 44.599995 25.929993 44.559994 c
26.009993 43.999992 l
26.009993 43.879993 26.009993 43.759991 26.049994 43.639992 c
26.089994 43.119991 26.129993 42.55999 26.209993 42.039993 c
26.369993 40.439995 l
26.529993 38.799995 l
26.689993 37.239994 l
26.729994 36.959995 26.769993 36.679993 26.769993 36.439995 c
26.889994 35.559994 26.969994 34.719994 27.049994 33.839996 c
27.289993 31.559996 l
27.449993 29.959995 l
27.529993 29.439995 27.569994 28.919994 27.609993 28.359995 c
27.809994 26.759995 l
27.809994 26.479994 27.849995 26.239994 27.889994 25.959995 c
28.129993 23.359995 l
28.369993 21.079994 l
28.529993 19.519995 l
28.609993 18.959995 28.649994 18.439995 28.689993 17.919994 c
28.889994 16.279995 l
28.969994 15.439995 l
29.009995 14.839994 29.089994 14.239995 29.169994 13.639995 c
29.209995 13.079994 29.249994 12.559995 29.329994 12.039994 c
29.329994 11.959994 l
35.209995 11.959994 l
35.209995 12.239994 35.249996 12.479994 35.289997 12.719995 c
35.329998 13.239994 35.369999 13.719995 35.449997 14.239994 c
35.609997 15.999994 l
35.689999 16.559994 35.729996 17.079994 35.769997 17.599995 c
35.969997 19.239994 l
35.969997 19.519995 36.009998 19.759995 36.049999 20.039993 c
36.290001 22.639994 l
36.530003 24.879993 l
36.570004 25.439993 36.650002 25.999994 36.730003 26.519993 c
36.770004 27.079992 36.810005 27.599993 36.890003 28.159992 c
37.050003 29.759993 l
37.210003 31.359993 l
37.370003 32.999992 l
37.410004 33.239994 37.450005 33.519993 37.450005 33.759991 c
37.570004 34.639992 37.650005 35.479992 37.730003 36.359989 c
37.970005 38.639988 l
38.130005 40.239986 l
38.210007 40.759987 38.250004 41.279987 38.290005 41.839985 c
38.490005 43.439983 l
38.490005 43.759983 38.530006 44.079983 38.570007 44.359982 c
38.57 44.360001 l
h
33.73 34.560001 m
33.93 34.560001 l
33.330002 28.080002 l
33.210003 27.200003 l
33.210003 26.840002 33.170002 26.480003 33.130001 26.120003 c
33.09 25.800003 33.049999 25.440002 33.049999 25.120003 c
32.849998 23.360003 l
32.809998 22.800003 32.769997 22.200003 32.689999 21.600002 c
32.689999 21.320002 32.649998 21.040003 32.609997 20.760002 c
32.569996 20.440002 32.529995 20.080002 32.529995 19.760002 c
32.449993 19.160002 32.409996 18.600002 32.369995 18.000002 c
32.169994 16.000002 l
32.169994 15.880002 32.129993 15.760002 32.089993 15.640002 c
32.089993 15.600002 32.089993 15.600002 32.049992 15.600002 c
32.049992 15.640002 l
31.889992 16.960003 l
31.849991 17.520002 31.809992 18.120003 31.729992 18.680002 c
31.689991 19.280003 31.649992 19.840002 31.569992 20.440002 c
31.409992 22.200003 l
31.329992 23.000002 l
31.169992 24.760002 l
31.089993 25.360003 31.049992 25.920002 31.009993 26.520002 c
30.929993 27.320002 l
30.849993 27.880001 30.809992 28.480001 30.769993 29.040001 c
30.569992 30.800001 l
30.529991 31.400002 30.489992 31.960001 30.409992 32.560001 c
30.409992 32.720001 30.369991 32.880001 30.369991 33.080002 c
30.209991 34.560001 l
33.009991 34.560001 l
33.729992 34.560001 l
33.73 34.560001 l
h
53.134998 11.96 m
56.294998 11.96 l
55.334999 18.200001 l
55.294998 18.640001 55.215 19.08 55.134998 19.52 c
55.054996 20.040001 54.974998 20.52 54.934998 21.040001 c
54.574997 23.240002 l
54.454998 24.200001 l
53.414997 30.84 l
51.334999 44.599998 l
51.294998 44.599998 l
48.174999 44.599998 l
48.134998 44.599998 l
47.334999 39.16 46.494999 33.719997 45.654999 28.279999 c
43.174999 11.959999 l
46.334999 11.959999 l
48.415001 25.719999 l
49.455002 32.399998 l
49.575001 33.319996 l
49.655003 33.639996 49.695 33.999996 49.735001 34.319996 c
50.654999 28.319996 l
53.134998 11.96 l
h
64.459999 25.719999 m
64.5 32.399998 l
64.5 33.319996 l
64.5 35.559998 l
64.5 37.039997 l
64.5 38.359997 l
64.5 44.599998 l
60.900002 44.599998 l
60.900002 28.279999 l
60.900002 11.959999 l
64.459999 11.959999 l
64.459999 25.719999 l
h
79.864998 35.560001 m
79.864998 35.880001 l
79.904999 36.280003 79.945 36.68 79.945 37.120003 c
79.945 37.480003 l
79.904999 37.480003 l
79.904999 37.600002 l
79.904999 38.120003 79.904999 38.640003 79.824997 39.160004 c
79.664993 40.760002 78.784996 44.600002 74.504997 44.600002 c
69.945 44.600002 69.264999 39.960003 69.184998 38.640003 c
69.144997 38.280003 69.144997 37.920002 69.144997 37.560001 c
69.144997 36.600002 l
69.144997 34.400002 l
72.744995 34.400002 l
72.744995 37.640003 l
72.744995 38.080002 72.744995 38.520004 72.824997 38.960003 c
72.864998 39.240002 72.945 39.520004 73.024994 39.800003 c
73.064995 39.920002 73.144997 40.040005 73.184998 40.200005 c
73.464996 40.720005 73.904999 41.000004 74.464996 41.040005 c
74.664993 41.080006 74.864998 41.040005 75.064995 41.000004 c
75.424995 40.920002 75.704994 40.680004 75.944992 40.360004 c
76.064995 40.200005 76.144989 40.000004 76.224991 39.800003 c
76.344994 39.480003 76.384995 39.160004 76.424988 38.840004 c
76.464989 38.440002 76.50499 38.000004 76.50499 37.600002 c
76.50499 36.160004 l
76.344986 34.400005 75.744987 32.920002 74.264992 30.840004 c
72.584991 28.480003 71.50499 26.560003 70.744995 25.040005 c
69.024994 21.960005 69.144997 19.280005 69.144997 19.280005 c
69.144997 18.120005 l
69.224998 17.400005 l
69.305 16.480005 69.985001 11.960005 74.665001 11.960005 c
78.824997 11.960005 79.665001 15.920005 79.864998 17.520004 c
79.904999 18.000004 79.904999 18.520004 79.904999 19.000004 c
79.904999 22.280005 l
79.904999 22.400005 l
79.904999 22.640005 79.904999 22.640005 79.705002 22.640005 c
79.465004 22.640005 l
77.825005 22.640005 l
76.785004 22.640005 l
76.585007 22.640005 l
76.545006 22.640005 76.505005 22.600004 76.505005 22.560005 c
76.505005 22.240005 l
76.505005 19.160006 l
76.505005 18.720005 76.505005 18.280006 76.425003 17.840006 c
76.385002 17.480005 76.345001 17.160006 76.225006 16.800007 c
76.145004 16.600006 76.065002 16.400007 75.905006 16.200006 c
75.665009 15.840007 75.345009 15.600006 74.945007 15.520006 c
74.74501 15.480006 74.505005 15.480006 74.345009 15.520006 c
73.865005 15.600006 73.505013 15.840006 73.265007 16.280006 c
73.105003 16.560007 72.985008 16.880007 72.905006 17.240005 c
72.825005 17.640005 72.785004 18.000006 72.745003 18.440006 c
72.745003 19.000006 l
72.745003 19.360006 l
72.825005 21.400005 73.425003 23.000006 75.105003 25.320007 c
75.225006 25.480007 l
75.905006 26.400007 79.185005 31.040007 79.785004 34.920006 c
79.864998 35.560001 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
